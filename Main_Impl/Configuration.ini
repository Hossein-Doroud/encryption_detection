#ONLY lINES WITH HASH SYMBOL (#) IS A COMMENT
#Interface to be used to capture traffic. if you leave it empty, pcap file will be used.
interface = 
#Path to pcap file 
pcap_file = /mnt/c/Users/ahmad/Desktop/Thesis/pcap_files/test_pcap_output/t1.pcap
# threshold of number of the number of payloads packets (for each biflow) from which the features will be extracted
mainthreshold = 5
#Randomness Tests: THIS HAS TO BE MATCHED WITH THE NUMBER OF RTS USED IN IMPL
#- commenting any <RT_plugin> function in RTHandler means reducing this by one
#-------------RANDOMNESS TESTS SELECTION----------------------------------------------
#Uncomment the required Randomness Tests in Application
FrequencyTest
BlockFreqTest
SerialTest
CumulativeSumTest
ApproximateEntropyTest
DescreteFourierTransformTest
LongestRunsOfOnesTest
RunsTest
TopologicalBinaryTest
GreatesCommonDivisorTest
BoockStackTest
#------------END OF SELECTION------------------DO NOT COMMENT OR UNCOMMENT ANY LINE AFTER THIS LINE-----------------------
#RTsPlugin = 11111111000
# for training phase train is 1, Train is 0 then NO training
Train = 1
# for classification phase classify is 1, classify is 0 then NO classification
classify = 1
##########Note that it is possible to do training and classification at the same time
#path to file which saves results (fivetuple, label, pred) in (if classifiy and training are 1 the file will contain only the classification results)
resultsFile = FULLPATH/TO/results/test1.log
#path to trainingfile saves the finalized ground truth which can be used for ANN training later (features,label)
trainingFile = FULLPATH/TO/results/test12.csv
#GTfile contains flow info fivetuple,<otherinfo>,labels (will be translated to single label)
#GTfile == "Encryption_Detection"
#if (tmp == 2000 || tmp == 6000 || tmp == 8000) stb->label = 0; 
#else if (tmp == 3000 || tmp == 4000 || tmp == 7000) stb->label =1;
#GTfile == "Content_Distinguisher"
GTfile = FULLPATH/TO/GTfiles/t1id.csv
#ClassificationScriptPy this is the python module will be used from inside cpp to do the classification and
#return prediction value. It has two main functions one to load the (saved) ML model and second to do prediction
ClassificationScriptPy = multiClassification
#python_object_path the absolute path to the saved ML model (after training)
#is loaded and used in classification phase
# CONSIDER THE NUMBER OF FEATURES IN TRAINED MODEL, THIS HAS TO MATCH RANDOMNESS TESTS SELECTION
# EACH RANDOMNESS TEST GENERATES TWO FEATURES, EXACT SAME RTs HAS TO BE FOR TRAINING AND CLASSIFICATION
python_object_path = FULLPATH/TO/ANNinPython/Models/T2F22__Model_2X60.h5
#path to file which saves time consumption of main modules (Randomness Tests, ANN classification) (fivetuple, label, pred) in (if classifiy and training are 1 the file will contain only the classification results)
reportTime = FULLPATH/TO/results/tesdsg.log
